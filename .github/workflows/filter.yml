name: Auto PGN Download, Clean, Filter, and Create Book

on:
  workflow_dispatch:
    inputs:
      bot_name:
        description: "Enter the Lichess bot username"
        required: true
        default: "indianguyplayz"
      bin_name:
        description: "Enter the output BIN book name"
        required: true
        default: "Book.bin"

jobs:
  process:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # ---------------------------
      # 1️⃣ Download PGN from Lichess
      # ---------------------------
      - name: Calculate “since” timestamp (1 Mar 2025 00:00 UTC)
        id: time
        shell: bash
        run: |
          SINCE=$(date -d "2025-03-01 00:00:00 UTC" +%s)000
          echo "since=$SINCE" >> "$GITHUB_OUTPUT"

      - name: Download PGN
        shell: bash
        run: |
          FILE="${{ github.event.inputs.bot_name }}.pgn"
          curl -L "https://lichess.org/api/games/user/${{ github.event.inputs.bot_name }}" \
            -G \
            --data-urlencode "since=${{ steps.time.outputs.since }}" \
            -H "Accept: application/x-chess-pgn" \
            -o "$FILE"

      # ---------------------------
      # 2️⃣ Install PGN-Extract
      # ---------------------------
      - name: Install pgn-extract
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y make g++
          wget https://www.cs.kent.ac.uk/people/staff/djb/pgn-extract/pgn-extract-21-10.zip
          unzip pgn-extract-21-10.zip
          cd pgn-extract-21-10 && make && sudo cp pgn-extract /usr/local/bin

      # ---------------------------
      # 3️⃣ Remove games with illegal moves
      # ---------------------------
      - name: Clean illegal games
        shell: bash
        run: |
          INPUT="${{ github.event.inputs.bot_name }}.pgn"
          OUTPUT="cleaned_${{ github.event.inputs.bot_name }}.pgn"
          pgn-extract -# -o "$OUTPUT" "$INPUT"
          mv "$OUTPUT" "$INPUT"

      # ---------------------------
      # 4️⃣ Filter only Wins and Draws for this bot
      # ---------------------------
      - name: Filter wins/draws for bot
        shell: bash
        run: |
          INPUT="${{ github.event.inputs.bot_name }}.pgn"
          OUTPUT="filtered_${{ github.event.inputs.bot_name }}.pgn"
          pgn-extract -# \
            --white "${{ github.event.inputs.bot_name }}" --result "1-0" \
            --black "${{ github.event.inputs.bot_name }}" --result "0-1" \
            --result "1/2-1/2" \
            -o "$OUTPUT" "$INPUT"
          mv "$OUTPUT" "$INPUT"

      # ---------------------------
      # 5️⃣ Convert PGN to BIN book (Polyglot)
      # ---------------------------
      - name: Run Polyglot Conversion
        shell: cmd
        run: |
          polyglot.exe make-book -pgn "${{ github.event.inputs.bot_name }}.pgn" -bin "${{ github.event.inputs.bin_name }}" -min-game 1
          echo Book created successfully!

      # ---------------------------
      # 6️⃣ Commit results back to repo
      # ---------------------------
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Commit and Push Files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add "${{ github.event.inputs.bot_name }}.pgn" "${{ github.event.inputs.bin_name }}"
          git commit -m "Auto processed PGN and book for ${{ github.event.inputs.bot_name }}" || echo "No changes to commit"
          git push
